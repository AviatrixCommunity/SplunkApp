<form refresh="300">
  <label>Overview</label>
  <description></description>
  <fieldset submitButton="false" autoRun="true">
    <input type="time" searchWhenChanged="true">
      <label></label>
      <default>
        <earliest>0</earliest>
        <latest></latest>
      </default>
    </input>
  </fieldset>
  <row>
    <panel>
      <single>
        <search>
          <query>`aviatrix_log` AviatrixGwNetStats earliest=-5m@m|rename name as Gateway | stats dc(Gateway)</query>
          <earliest>$earliest$</earliest>
          <latest>$latest$</latest>
        </search>
        <option name="drilldown">none</option>
        <option name="underLabel">Gateways</option>
        <option name="useColors">0</option>
      </single>
    </panel>
    <panel>
      <single>
        <search>
          <query>`aviatrix_log` AviatrixVPNSession | dedup Gateway, User  |  where Status="active" | stats dc(User)</query>
          <earliest>$earliest$</earliest>
          <latest>$latest$</latest>
        </search>
        <option name="drilldown">none</option>
        <option name="underLabel">Active OpenVPN Users</option>
      </single>
    </panel>
    <panel>
      <single>
        <search>
          <query>`aviatrix_log` AviatrixTunnelStatusChange | rename new_state as State| eval temp = if (src_gw &gt;dst_gw,src_gw,dst_gw) | eval Gateway1 = if (src_gw&lt;dst_gw,src_gw, dst_gw) | eval Gateway2 = temp | dedup Gateway1, Gateway2 | where State="Up" | stats count</query>
          <earliest>$earliest$</earliest>
          <latest>$latest$</latest>
        </search>
        <option name="drilldown">none</option>
        <option name="rangeColors">["0x65a637","0x65a637"]</option>
        <option name="rangeValues">[0]</option>
        <option name="underLabel">tunnels Up</option>
        <option name="useColors">1</option>
      </single>
    </panel>
    <panel>
      <single>
        <search>
          <query>`aviatrix_log` AviatrixTunnelStatusChange | rename new_state as State| eval temp = if (src_gw &gt;dst_gw,src_gw,dst_gw) | eval Gateway1 = if (src_gw&lt;dst_gw,src_gw, dst_gw) | eval Gateway2 = temp | dedup Gateway1, Gateway2 | where State="Down" | stats count</query>
          <earliest>$earliest$</earliest>
          <latest>$latest$</latest>
        </search>
        <option name="colorMode">none</option>
        <option name="drilldown">none</option>
        <option name="rangeColors">["0x000","0xd93f3c"]</option>
        <option name="rangeValues">[0]</option>
        <option name="underLabel">tunnels Down</option>
        <option name="useColors">1</option>
      </single>
    </panel>
  </row>
  <row>
    <panel>
      <title>Tunnel status</title>
      <input type="dropdown" token="gateway1" searchWhenChanged="true">
        <label>Gateway1</label>
        <choice value="*">All</choice>
        <fieldForLabel>Gateway1</fieldForLabel>
        <fieldForValue>Gateway1</fieldForValue>
        <search>
          <query>`aviatrix_log` AviatrixTunnelStatusChange | rename new_state as State| eval temp = if (src_gw &gt;dst_gw,src_gw,dst_gw) | eval Gateway1 = if (src_gw&lt;dst_gw,src_gw, dst_gw) | eval Gateway2 = temp | dedup Gateway1, Gateway2 | where State="Up" or State="Down" | stats count by Gateway1</query>
          <earliest>$earliest$</earliest>
          <latest>$latest$</latest>
        </search>
        <change>
          <unset token="form.gateway2"></unset>
        </change>
        <default>*</default>
      </input>
      <input type="dropdown" token="gateway2" searchWhenChanged="true">
        <label>Gateway2</label>
        <choice value="*">All</choice>
        <fieldForLabel>Gateway2</fieldForLabel>
        <fieldForValue>Gateway2</fieldForValue>
        <search>
          <query>`aviatrix_log` AviatrixTunnelStatusChange | rename new_state as State| eval temp = if (src_gw &gt;dst_gw,src_gw,dst_gw) | eval Gateway1 = if (src_gw&lt;dst_gw,src_gw, dst_gw) | eval Gateway2 = temp | dedup Gateway1, Gateway2 |search $gateway1$| where State="Up" OR State="Down" | stats count by Gateway2</query>
        </search>
        <default>*</default>
        <initialValue>*</initialValue>
      </input>
      <table>
        <search>
          <query>`aviatrix_log` AviatrixTunnelStatusChange | rename new_state as State |eval Latency(sec)=round(latency,2)| eval temp = if (src_gw &gt;dst_gw,src_gw,dst_gw) | eval Gateway1 = if (src_gw&lt;dst_gw,src_gw, dst_gw) | eval Gateway2 = temp | dedup Gateway1, Gateway2 |where State="Up" or State="Down" |search $gateway1$ Gateway2="$gateway2$"|rex field=Gateway1 "(?&lt;gw1&gt;\w+)\((?&lt;gw1_vendor&gt;\w+)\s(?&lt;gw1_region&gt;\S+)\)" |rex field=Gateway2 "(?&lt;gw2&gt;\w+)\((?&lt;gw2_vendor&gt;\w+)\s(?&lt;gw2_region&gt;\S+)\)"|eval Peering_type=case(gw1_vendor=gw2_vendor AND gw1_region=gw2_region,"Same cloud, Same region",gw1_vendor=gw2_vendor,"Same cloud, different region",true(),"Inter-Cloud")|table Gateway1 Gateway2 Latency(sec) Peering_type State</query>
          <earliest>$earliest$</earliest>
          <latest>$latest$</latest>
        </search>
        <option name="drilldown">cell</option>
        <format type="color" field="State">
          <colorPalette type="map">{"Down":#D93F3C,"Up":#65A637}</colorPalette>
        </format>
      </table>
    </panel>
  </row>
  <row>
    <panel>
      <chart>
        <title>Tunnel Status history(1=Up 0=Down)</title>
        <search>
          <query>`aviatrix_log` AviatrixTunnelStatusChange | eval State=if(new_state="Up",1,0) | eval temp = if (src_gw &gt;dst_gw,src_gw,dst_gw) | eval Gateway1 = if (src_gw&lt;dst_gw,src_gw, dst_gw) | eval Gateway2 = temp | search Gateway1="$gateway1$" Gateway2="$gateway2$"|rex field=Gateway1 "(?&lt;gw1&gt;\w+)" |rex field=Gateway2 "(?&lt;gw2&gt;\w+)"|eval tunnel=gw1."&lt;-&gt;".gw2 | chart latest(State) as StateChange by _time,tunnel | makecontinuous span=1m | filldown</query>
          <earliest>$earliest$</earliest>
          <latest>$latest$</latest>
          <sampleRatio>1</sampleRatio>
        </search>
        <option name="charting.axisLabelsX.majorLabelStyle.overflowMode">ellipsisNone</option>
        <option name="charting.axisLabelsX.majorLabelStyle.rotation">0</option>
        <option name="charting.axisLabelsY.majorUnit">1</option>
        <option name="charting.axisTitleX.visibility">visible</option>
        <option name="charting.axisTitleY.visibility">visible</option>
        <option name="charting.axisTitleY2.visibility">visible</option>
        <option name="charting.axisX.scale">linear</option>
        <option name="charting.axisY.maximumNumber">1</option>
        <option name="charting.axisY.minimumNumber">0</option>
        <option name="charting.axisY.scale">linear</option>
        <option name="charting.axisY2.enabled">0</option>
        <option name="charting.axisY2.scale">inherit</option>
        <option name="charting.chart">line</option>
        <option name="charting.chart.bubbleMaximumSize">50</option>
        <option name="charting.chart.bubbleMinimumSize">10</option>
        <option name="charting.chart.bubbleSizeBy">area</option>
        <option name="charting.chart.nullValueMode">connect</option>
        <option name="charting.chart.showDataLabels">none</option>
        <option name="charting.chart.sliceCollapsingThreshold">0.01</option>
        <option name="charting.chart.stackMode">default</option>
        <option name="charting.chart.style">shiny</option>
        <option name="charting.drilldown">none</option>
        <option name="charting.layout.splitSeries">0</option>
        <option name="charting.layout.splitSeries.allowIndependentYRanges">0</option>
        <option name="charting.legend.labelStyle.overflowMode">ellipsisMiddle</option>
        <option name="charting.legend.placement">bottom</option>
        <option name="trellis.enabled">0</option>
        <option name="trellis.scales.shared">1</option>
        <option name="trellis.size">medium</option>
      </chart>
    </panel>
  </row>
  <row>
    <panel>
      <table>
        <title>VPN users (hh:mm:sec)</title>
        <search>
          <query>`aviatrix_log` AviatrixVPNSession | eval secs=strptime(Logout,"%Y-%m-%d %H:%M:%S")-strptime(Login,"%Y-%m-%d %H:%M:%S") | stats sum(secs) as duration by User | eval Total_Time=floor(duration/3600).":".floor((duration/60)%60).":".floor(duration%60)| table User Total_Time |sort Total_Time desc</query>
          <earliest>$earliest$</earliest>
          <latest>$latest$</latest>
        </search>
        <option name="count">10</option>
        <option name="dataOverlayMode">none</option>
        <option name="drilldown">cell</option>
        <option name="rowNumbers">false</option>
        <option name="wrap">true</option>
        <drilldown>
          <link>
            <![CDATA[search?q=`aviatrix_log` AviatrixVPNSession | search $click.name$=$click.value$ | where NOT Duration="N/A"]]>
          </link>
        </drilldown>
      </table>
    </panel>
    <panel>
      <table>
        <title>Active VPN Sessions</title>
        <search>
          <query>`aviatrix_log` AviatrixVPNSession | dedup Gateway, User  |  where Status="active" | table Gateway User</query>
          <earliest>$earliest$</earliest>
          <latest>$latest$</latest>
        </search>
      </table>
    </panel>
  </row>
</form>